# Calico Version v2.6.12
# https://docs.projectcalico.org/v2.6/releases#v2.6.12
# This manifest includes the following component versions:
#   calico/node:v2.6.12
#   calico/cni:v1.11.8
#   calico/kube-controllers:v1.0.5

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://192.168.1.112:2379,https://192.168.1.113:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "cniVersion": "0.1.0",
        "type": "calico",
        "etcd_endpoints": "__ETCD_ENDPOINTS__",
        "etcd_key_file": "__ETCD_KEY_FILE__",
        "etcd_cert_file": "__ETCD_CERT_FILE__",
        "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
        "log_level": "info",
        "mtu": 1500,
        "ipam": {
            "type": "calico-ipam"
        },
        "policy": {
            "type": "k8s",
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "kubeconfig": "__KUBECONFIG_FILEPATH__"
        }
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"   # "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert" # "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"  # "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNUEzbTV0K004d25aeFdoOWY0cXlBdldsYk05UFNjOGdTUmVBKzY2bXVSSGt2NUxPCmF6eXk1OTdITkVGa2lHSXFUWXlqT1hTZmQ4blpIN2N1d2pJN1VMZHRzOFVubHAzUUZwelpCUXQ1MW5ONnRMMDQKZ21mQVhsSFFrcFRycjdHd0NGem9EaEdFMUtyRU9sbld6R0hSYVM4UFM5bm9EbDJKOWZEM1NrVG9zRmt6cjA5YQpZVlBNM3BvZmtONS9sS1lmSDU5YzB0MlV3cldocFFMdmtRcURSU0VQWndaeFBMT1JHN1ZnQkJoOFBDelFvaFZDCmVqYlkvS3AwQkRrcGRUQnhmdUFaNnA4eGluQ3FXTExlcFMzRHpOOTRiUnI4YmFuRWI3Y2J4bzcwUFJ6MEZ6SFUKdTBVcXpGQ0cwNFFoaFM5NWFxOFJiV20rNWl0NlYwL1ozbFlpbVFJREFRQUJBb0lCQUZtSEc1NkhKRTVGRDdqdgp6RlRGbmh5TFV1WGtmTHY5RkMrZGlvVkRpekFjVmpEZThTb29LaFBjNFZjaVZOVTF0R1c5VUZhOThkeVU0U2dTClFjajY3MDVBdEZCZWxhd0xTQ1dZYlpvTlowZEpEbUxsNWNsTDhia1ZaVXdtS21CTzRVeG5MTEpaTGt4T3Zib3EKaXFpeHZnUU05WFJSbDBnTWNKeWNmSGdybFMybEdWcThSZTE2ZGhGdG85MWh3UElvdW40ZTB3TzFSYVEvSmRhYgpEU1RvV1piWS8zT21YOTNOcCtRVUUycno5OWZuUjQrUjl1YmJDNXAveVBRVVZEYmZ1MWpEd0pUWEdGWjhRSGQ4CkkwYVdmT2crcmlNWDh5bTNwaWM1R1JYbWhNeGlHclNlWUUzdkhwek5KM3dpcDFEeFcxMlExWlNhTHluMWxPTUEKcmVpelFnRUNnWUVBNnNKaHJhcEdCVlJLQThrWFM4dlFBSml4VDVwT0lSaXJrYkhnTEF3bk9EY0hwRWcrZnlBcwo1dTQxbWp0U2YvL0x1Uk5rN3pnRWdxcTRqSFFTQ3I4bVFJNy84OGZrRjdHVUViZUdyQ0k2QmM2R1VYeGZ2a0Y0Clo1TERJNm4wUW5ud2Z1YUFtQ1ZVSWFTU1NUUElhN3EzNkE0eTZXYTcyZmNjQ013clRUZVdNcU1DZ1lFQStMQTMKT0dZc29UYUk1RVNKeENUQ2tncC90a1UyMTJQeElFcGU1OUZwQ2h1YkcyUjBWQ08zQVpBKzV1aUtha2x4Vmc1dgpUanhKWmJVc3hwSEZtc2Rha1N1K3lFZHVPOGdaZ0kxM0UwZktVSGxNTVc0Zm8yam1zb2FzQVlQRnUzSHBOQUpHCkN4d24vdGo2c2hHZlZtUlV2U2N3Z003TkQ0OHNISm8yTmtUOHBaTUNnWUJxWUpTa2ZqRG1mMUJlc01PbXEvOWcKRmREYThtQU83VC9wY0VIVms5Zzl4K25sam5zTFhnZ2F5THh2WEF4QlJpY0pnWGxPVVFMeU51d1RjUkV2MzNnMAo3dGVhbnV5RHRBc1ZrQ1V0WVFFTDJvN1E0OXY2dVc0VytORUdHeUE4ODBhQUtuRUJBSUZFRVcvY1RlTzJ0VkJhCmpmeVIrT1NNbTBZUDBueVlxK1Nhb3dLQmdFMUdGQ0tHUFIvcTNpWnYxWThKRFJ4ci9yc1lUcTRtOCtuZ3NoUysKVVRFKzJyZHNRMmxSbjYvd3JscjVydWpQNFZPb01KWFN6Y3U0dkMwSFpxdHRmb3JWV1BiS20wb2dKeXgyeUtWSgpEV2hzQ0d6amx4a2pvMnVkeFJ6RFlWR1pWNms5ZTU1QUpYMWUxcWMyS3BpaG5HTWFKa3dmOWovN2NPMkNUWTRYCmFablpBb0dCQUw0QUpQaHZCdHZZdnI3bTF5ZEpuRytjV2Fwdi9ycmlEV0w3VnBSS0w2Vi9YelNmWG5ZNHJud1YKU3QyNWJRK3FJcmhrS2VMRGp5U2haMDVrQ1F1T3hRVHovdXdta2NYdnZneXVrWXJtVVQ2Ymdpc0RRdUtjTEJWSApmQ1Mva3pad1dXclNMaVZtdkJrYVpZeml3TmdGbmN3eGdSQzBQcnZ2SjZSb3VRd2paV1ZaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lJZnV2VWZFVEh3b1l3RFFZSktvWklodmNOQVFFTEJRQXdFakVRTUE0R0ExVUUKQXhNSFpYUmpaQzFqWVRBZUZ3MHlNREEzTVRjeE1EQTFNREphRncweU1UQTNNVGN4TURBMU1ESmFNQTR4RERBSwpCZ05WQkFNVEEyaDZZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPUU41dWJmCmpQTUoyY1ZvZlgrS3NnTDFwV3pQVDBuUElFa1hnUHV1cHJrUjVMK1N6bXM4c3VmZXh6UkJaSWhpS2syTW96bDAKbjNmSjJSKzNMc0l5TzFDM2JiUEZKNWFkMEJhYzJRVUxlZFp6ZXJTOU9JSm53RjVSMEpLVTY2K3hzQWhjNkE0UgpoTlNxeERwWjFzeGgwV2t2RDB2WjZBNWRpZlh3OTBwRTZMQlpNNjlQV21GVHpONmFINURlZjVTbUh4K2ZYTkxkCmxNSzFvYVVDNzVFS2cwVWhEMmNHY1R5emtSdTFZQVFZZkR3czBLSVZRbm8yMlB5cWRBUTVLWFV3Y1g3Z0dlcWYKTVlwd3FsaXkzcVV0dzh6ZmVHMGEvRzJweEcrM0c4YU85RDBjOUJjeDFMdEZLc3hRaHRPRUlZVXZlV3F2RVcxcAp2dVlyZWxkUDJkNVdJcGtDQXdFQUFhTnFNR2d3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHCkNDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQTNCZ05WSFJFRU1EQXVnZ05vZW1PQ0NXeHZZMkZzYUc5emRJY0UKd0tnQmNJY0Vmd0FBQVljUUFBQUFBQUFBQUFBQUFBQUFBQUFBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpRT2wwcW52dTBPUGFkOVJRSUFBdHJOdUgyQ2Uvcld4R3FZcFBHTmcrMVFDYlJCQjNlZ3EybU1hcjNhNmNyYm1KCkl3ellwQ1IzYlpCSGt2U0p4Z0Q3YVN6T3BNN3Z3aGRJdXMvSE9lYTRBVTgwMndxdVBKQmpUS1UxWjVUbXBjZ3gKZDNCU0IyWW9lSjl5ZWN0cHV5aDVJQ0FVcWZtUEw2TExyb1JsME51MjFmdXY4eEE5SnI0RjNGRWN2VUVrVGY2RQpCS25hSEF2K2p3UGpVODVOWmNlOS84R2NHZS90V2d3ME9MSWJEWWdyNlprY0N6OVJYQVQxdTZYVkNwblhNTklVCjRvWEQrN3BzM3FoWDdJS25rN21za0h2RDFGdW9XZjNBUGREeTRJL3JhNURGWkljdzhEcmxhQkxjem5Wa0xhVHkKUHFYM0I2aG0vdnc4c1JVZEQ1Z1VIUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN3akNDQWFxZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFTTVJBd0RnWURWUVFERXdkbGRHTmsKTFdOaE1CNFhEVEl3TURjeE56RXdNRFV3TWxvWERUTXdNRGN4TlRFd01EVXdNbG93RWpFUU1BNEdBMVVFQXhNSApaWFJqWkMxallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtrU1hKRlJzNFE0CjJmc29BUVFHdWJDTDF1YlY5LytJVjhKWnFtb2plaHk0MGVOaEFqQ3VLNit6SFJkZ3NYd0s5TDNkSm8wZU5FRS8KanZzNU5XT0dZekEvREJrRDR1UXc4WWxQUmtNajRENDI2dUQvZnhNRVMyNGJNcDhXMkRySWZSTHhWY0dSdCtyegpHblg3UmFnMEx6dzdkT2x3TnJ1VG5FcjZaaUc0bWhsSXgweWtycWhhSHlvU056K2FDbGZjVGdEcEJPa013Yi9MCjhSUGd5QXROZ3ZFaXJWcTM4cHFOckx0NVpUcHlYcERpYkJRdDB1UDNITjBlQVk2MzJCd244cDZQeHltVGhBK0kKbUZKeG9DVkxBbjhxLzR3NDBXY3pUTk90b2tidkRLdks3Z1VyMEdTcXBnd0E1cVJXaVE1cEtoVUVQallpcEUzSQpGcnlrcm96V3dra0NBd0VBQWFNak1DRXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CCkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQUpYZXpkSmNqNHNoY09HbUdVU1VtSkFDc1NidnVGb2pzaUQKVE1FaVRhMStoSkcxQnd6K2FESkFjZ1VSYU0xZDZNUFJYa0M1ZTFxV1Vkemt4eWhVZmZ0TkFIMHBIUHROMGNyTwpWaFBEa3VWeW5BSFhKVlh6bklFL1pxcUNJQ1NsSW83Y0htRjNFWGtBRFBsZnVOWjdnUGdpV2RvN0JjMWxJUFNGCmxLT0VUdlZUcm9GdG1MMTN1amFqcDEwcmNHU2JBejBkSFlld2pXeFRaSzJOM0hQVVdWQStSdnhLczYyaG81UmIKOVV4Rmk2L0t0VkRkeVp6RlNaa3M5U29WbFRCVWVKbTRDcVNZRVlrbGFUa2xyZ090RThhQyt6UTJ2dXo3K291eQpoaXMzY0kvNmhIbVhvUDl1SktwMWpjdnZHS2wvSnp1azQ0S2RuVHRKTXJScEc2bU5GQlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: quay.io/calico/node:v2.6.12
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # Configure the IP Pool from which Pod IPs will be chosen.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.16.0.0/16"
            - name: IP_AUTODETECTION_METHOD
              value: "interface=ens.*"
            - name: CALICO_IPV4POOL_IPIP
              value: "always"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: ""
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v1.11.8
          command: ["/install-cni.sh"]
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v1.0.5
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This deployment turns off the old "policy-controller". It should remain at 0 replicas, and then
# be removed entirely once the new kube-controllers deployment has been deployed above.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-policy-controller
  namespace: kube-system
  labels:
    k8s-app: calico-policy
spec:
  # Turn this deployment off in favor of the kube-controllers deployment above.
  replicas: 0
  selector:
    matchLabels:
      k8s-app: calico-policy
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-policy-controller
      namespace: kube-system
      labels:
        k8s-app: calico-policy
    spec:
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-policy-controller
          image: quay.io/calico/kube-controllers:v1.0.5
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
